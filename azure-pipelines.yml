trigger:
  - main

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: azure_iac
    displayName: Azure IaC
    jobs:
      - job: azure_prod_iac
        displayName: Azure Production IaC
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.x"
              addToPath: true
          - task: Bash@3
            name: azure_terrform_init
            displayName: "Terraform Init and Plan"
            condition: or(eq(variables['Build.reason'], 'PullRequest'), eq(variables['Build.reason'], 'IndividualCI'))
            env:
              ARM_CLIENT_ID: $(AZ_CLIENT_ID)
              ARM_CLIENT_SECRET: $(AZ_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID: $(AZ_SUBSCRIPRION_ID)
              ARM_TENANT_ID: $(AZ_TENANT_ID)
            inputs:
              targetType: "inline"
              workingDirectory: $(System.DefaultWorkingDirectory)/azure/environments/prod
              script: |
                terraform init
                terraform plan -out=tfplan
          - task: Bash@3
            name: azure_terrform_apply
            displayName: "Terraform Apply"
            condition: eq(variables['Build.reason'], 'IndividualCI')
            env:
              ARM_CLIENT_ID: $(AZ_CLIENT_ID)
              ARM_CLIENT_SECRET: $(AZ_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID: $(AZ_SUBSCRIPRION_ID)
              ARM_TENANT_ID: $(AZ_TENANT_ID)
            inputs:
              targetType: "inline"
              workingDirectory: $(System.DefaultWorkingDirectory)/azure/environments/prod
              script: |
                terraform apply -input=false tfplan
